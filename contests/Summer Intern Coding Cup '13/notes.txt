*****************Expand the Acronyms*****************
Plan:
-preliminary sweep through paragraph, taking groups of
	-consecutive or semiconsecutive (1-3 word separation) capitalized words
	-words preceding ([acronym])
		-n+3 preceding words where n = length of acronym
-compare input acros against list of groups
	-for each test, for each group, test similarity to first letter of each word in group
	-if match, output that group
Implementation:
-getAcronyms: gets the list of groups of words
	-separate paragraph into arr of words
	-foldl
		-accumulator: the list to be returned (acc, uncap)
		-function:
			-not a letter: move on (uncap = -1)
			-capital & uncap < 0: push uncap list onto acc (uncap = 0)
			-capital and uncap >= 0: push word onto head acc (uncap = 0)
			-uncapital and uncap >= 0: 
				-if uncap > 2, move on (uncap = -1)
				-else, push word onto head acc (uncap++)